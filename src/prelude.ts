/**
 * WARNING
 * THIS FILE IS GENERATED BY THE pgts UTIL
 * ONLY EDIT CODE WHERE STATED
 * BEWARE THAT CODE MAY DISAPPEAR IF THE CORRESPONDING TABLE CHANGES ITS NAME
 */

export class Model {
  static readonly url = ''

  static async get<T extends Model>(): Promise<T[]> {
    const ret = this as any as (new () => T)
    const res = await fetch(`/pg/${this.url}`, {
      method: 'GET',
      headers: {
        Accept: 'application/json',
        'Content-Type': 'application/json'
      }
    })
    const js: any[] = await res.json()
    const len = js.length
    const result = new Array(len) as T[]
    const pros = Object.getOwnPropertyNames(new ret()) as (keyof T)[]
    for (var i = 0; i < len; i++) {
      var json = js[i]
      var obj = new ret()
      for (var p of pros) {
        if (json[p] !== undefined) obj[p] = json[p]
      }
      result[i] = obj
    }
    return result
  }

  async save() {

  }
}

